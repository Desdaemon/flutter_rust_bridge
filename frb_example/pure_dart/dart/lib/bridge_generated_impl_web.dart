// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`.

// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, camel_case_types

@JS()
library bridge_generated_web;

import 'package:js/js.dart';
import 'dart:convert';
import 'dart:typed_data';
import '../bridge_generated.dart';

@JS()
@anonymous
class wire_Attribute {
  external factory wire_Attribute({
    required String key,
    required String value,
  });
}

@JS()
@anonymous
class wire_Customized {
  external factory wire_Customized({
    required String final_field,
    String? non_final_field,
  });
}

@JS()
@anonymous
class wire_ExoticOptionals {
  external factory wire_ExoticOptionals({
    int? int32,
    BigInt? int64,
    double? float64,
    bool? boolean,
    Uint8List? zerocopy,
    Int8List? int8list,
    Uint8List? uint8list,
    Int32List? int32list,
    List<BigInt>? int64list,
    Float32List? float32list,
    Float64List? float64list,
    List<wire_Attribute>? attributes,
    required List<wire_Attribute?> attributes_nullable,
    List<wire_Attribute?>? nullable_attributes,
    wire_NewTypeInt? newtypeint,
    List<String>? string_list,
  });
}

@JS()
@anonymous
class wire_KitchenSink {
  external factory wire_KitchenSink({
    required int tag,
    dynamic kind,
  });
}

@JS()
@anonymous
class KitchenSink_Primitives {
  external factory KitchenSink_Primitives({
    required int int32,
    required double float64,
    required bool boolean,
  });
}

@JS()
@anonymous
class KitchenSink_Nested {
  external factory KitchenSink_Nested({
    required wire_KitchenSink field0,
  });
}

@JS()
@anonymous
class KitchenSink_Optional {
  external factory KitchenSink_Optional({
    int? field0,
    int? field1,
  });
}

@JS()
@anonymous
class KitchenSink_Buffer {
  external factory KitchenSink_Buffer({
    required Uint8List field0,
  });
}

@JS()
@anonymous
class KitchenSink_Enums {
  external factory KitchenSink_Enums({
    required int field0,
  });
}

@JS()
@anonymous
class wire_MySize {
  external factory wire_MySize({
    required int width,
    required int height,
  });
}

@JS()
@anonymous
class wire_MyTreeNode {
  external factory wire_MyTreeNode({
    required int value_i32,
    required Uint8List value_vec_u8,
    required bool value_boolean,
    required List<wire_MyTreeNode> children,
  });
}

@JS()
@anonymous
class wire_NewTypeInt {
  external factory wire_NewTypeInt({
    required BigInt field0,
  });
}

@JS(r"wasm_bindgen.wire_simple_adder")
external void wire_simple_adder(int port_, int a, int b);

@JS(r"wasm_bindgen.wire_primitive_types")
external void wire_primitive_types(int port_, int my_i32, BigInt my_i64, double my_f64, bool my_bool);

@JS(r"wasm_bindgen.wire_primitive_u32")
external void wire_primitive_u32(int port_, int my_u32);

@JS(r"wasm_bindgen.wire_handle_string")
external void wire_handle_string(int port_, String s);

@JS(r"wasm_bindgen.wire_handle_return_unit")
external void wire_handle_return_unit(int port_);

@JS(r"wasm_bindgen.wire_handle_vec_u8")
external void wire_handle_vec_u8(int port_, Uint8List v);

@JS(r"wasm_bindgen.wire_handle_vec_of_primitive")
external void wire_handle_vec_of_primitive(int port_, int n);

@JS(r"wasm_bindgen.wire_handle_zero_copy_vec_of_primitive")
external void wire_handle_zero_copy_vec_of_primitive(int port_, int n);

@JS(r"wasm_bindgen.wire_handle_struct")
external void wire_handle_struct(int port_, wire_MySize arg, wire_MySize boxed);

@JS(r"wasm_bindgen.wire_handle_newtype")
external void wire_handle_newtype(int port_, wire_NewTypeInt arg);

@JS(r"wasm_bindgen.wire_handle_list_of_struct")
external void wire_handle_list_of_struct(int port_, List<wire_MySize> l);

@JS(r"wasm_bindgen.wire_handle_string_list")
external void wire_handle_string_list(int port_, List<String> names);

@JS(r"wasm_bindgen.wire_handle_complex_struct")
external void wire_handle_complex_struct(int port_, wire_MyTreeNode s);

@JS(r"wasm_bindgen.wire_handle_sync_return")
external void wire_handle_sync_return(String mode);

@JS(r"wasm_bindgen.wire_handle_stream")
external void wire_handle_stream(int port_, String arg);

@JS(r"wasm_bindgen.wire_return_err")
external void wire_return_err(int port_);

@JS(r"wasm_bindgen.wire_return_panic")
external void wire_return_panic(int port_);

@JS(r"wasm_bindgen.wire_handle_optional_return")
external void wire_handle_optional_return(int port_, double left, double right);

@JS(r"wasm_bindgen.wire_handle_optional_struct")
external void wire_handle_optional_struct(int port_, String? document);

@JS(r"wasm_bindgen.wire_handle_optional_increment")
external void wire_handle_optional_increment(int port_, wire_ExoticOptionals? opt);

@JS(r"wasm_bindgen.wire_handle_increment_boxed_optional")
external void wire_handle_increment_boxed_optional(int port_, double? opt);

@JS(r"wasm_bindgen.wire_handle_option_box_arguments")
external void wire_handle_option_box_arguments(int port_, int? i8box, int? u8box, int? i32box, BigInt? i64box,
    double? f64box, bool? boolbox, wire_ExoticOptionals? structbox);

@JS(r"wasm_bindgen.wire_handle_return_enum")
external void wire_handle_return_enum(int port_, String input);

@JS(r"wasm_bindgen.wire_handle_enum_parameter")
external void wire_handle_enum_parameter(int port_, int weekday);

@JS(r"wasm_bindgen.wire_handle_u64_vec")
external void wire_handle_u64_vec(int port_, List<BigInt>? vec);

@JS(r"wasm_bindgen.wire_handle_customized_struct")
external void wire_handle_customized_struct(int port_, wire_Customized val);

@JS(r"wasm_bindgen.wire_handle_enum_struct")
external void wire_handle_enum_struct(int port_, wire_KitchenSink val);

String _wire2api_String(dynamic /*String*/ raw) {
  return raw as String;
}

List<String> _wire2api_StringList(dynamic /*List<String>*/ raw) {
  return raw as List<String>;
}

Uint8List _wire2api_ZeroCopyBuffer_Uint8List(dynamic /*Uint8List*/ raw) {
  return raw as Uint8List;
}

Attribute _wire2api_attribute(dynamic raw) {
  final arr = raw as List<dynamic>;
  if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
  return Attribute(
    key: _wire2api_String(arr[0]),
    value: _wire2api_String(arr[1]),
  );
}

bool _wire2api_bool(dynamic /*bool*/ raw) {
  return raw as bool;
}

Attribute _wire2api_box_autoadd_attribute(dynamic /*wire_Attribute*/ raw) {
  return _wire2api_attribute(raw);
}

bool _wire2api_box_autoadd_bool(dynamic /*bool*/ raw) {
  return _wire2api_bool(raw);
}

Customized _wire2api_box_autoadd_customized(dynamic /*wire_Customized*/ raw) {
  return _wire2api_customized(raw);
}

ExoticOptionals _wire2api_box_autoadd_exotic_optionals(dynamic /*wire_ExoticOptionals*/ raw) {
  return _wire2api_exotic_optionals(raw);
}

double _wire2api_box_autoadd_f64(dynamic /*double*/ raw) {
  return _wire2api_f64(raw);
}

int _wire2api_box_autoadd_i32(dynamic /*int*/ raw) {
  return _wire2api_i32(raw);
}

int _wire2api_box_autoadd_i64(dynamic /*BigInt*/ raw) {
  return _wire2api_i64(raw);
}

KitchenSink _wire2api_box_autoadd_kitchen_sink(dynamic /*wire_KitchenSink*/ raw) {
  return _wire2api_kitchen_sink(raw);
}

MySize _wire2api_box_autoadd_my_size(dynamic /*wire_MySize*/ raw) {
  return _wire2api_my_size(raw);
}

MyTreeNode _wire2api_box_autoadd_my_tree_node(dynamic /*wire_MyTreeNode*/ raw) {
  return _wire2api_my_tree_node(raw);
}

NewTypeInt _wire2api_box_autoadd_new_type_int(dynamic /*wire_NewTypeInt*/ raw) {
  return _wire2api_new_type_int(raw);
}

bool _wire2api_box_bool(dynamic /*bool*/ raw) {
  return _wire2api_bool(raw);
}

ExoticOptionals _wire2api_box_exotic_optionals(dynamic /*wire_ExoticOptionals*/ raw) {
  return _wire2api_exotic_optionals(raw);
}

double _wire2api_box_f64(dynamic /*double*/ raw) {
  return _wire2api_f64(raw);
}

int _wire2api_box_i32(dynamic /*int*/ raw) {
  return _wire2api_i32(raw);
}

int _wire2api_box_i64(dynamic /*BigInt*/ raw) {
  return _wire2api_i64(raw);
}

int _wire2api_box_i8(dynamic /*int*/ raw) {
  return _wire2api_i8(raw);
}

KitchenSink _wire2api_box_kitchen_sink(dynamic /*wire_KitchenSink*/ raw) {
  return _wire2api_kitchen_sink(raw);
}

MySize _wire2api_box_my_size(dynamic /*wire_MySize*/ raw) {
  return _wire2api_my_size(raw);
}

int _wire2api_box_u8(dynamic /*int*/ raw) {
  return _wire2api_u8(raw);
}

Customized _wire2api_customized(dynamic raw) {
  final arr = raw as List<dynamic>;
  if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
  return Customized(
    finalField: _wire2api_String(arr[0]),
    nonFinalField: _wire2api_opt_String(arr[1]),
  );
}

ExoticOptionals _wire2api_exotic_optionals(dynamic raw) {
  final arr = raw as List<dynamic>;
  if (arr.length != 16) throw Exception('unexpected arr length: expect 16 but see ${arr.length}');
  return ExoticOptionals(
    int32: _wire2api_opt_box_autoadd_i32(arr[0]),
    int64: _wire2api_opt_box_autoadd_i64(arr[1]),
    float64: _wire2api_opt_box_autoadd_f64(arr[2]),
    boolean: _wire2api_opt_box_autoadd_bool(arr[3]),
    zerocopy: _wire2api_opt_ZeroCopyBuffer_Uint8List(arr[4]),
    int8List: _wire2api_opt_int_8_list(arr[5]),
    uint8List: _wire2api_opt_uint_8_list(arr[6]),
    int32List: _wire2api_opt_int_32_list(arr[7]),
    int64List: _wire2api_opt_int_64_list(arr[8]),
    float32List: _wire2api_opt_float_32_list(arr[9]),
    float64List: _wire2api_opt_float_64_list(arr[10]),
    attributes: _wire2api_opt_list_attribute(arr[11]),
    attributesNullable: _wire2api_list_opt_box_autoadd_attribute(arr[12]),
    nullableAttributes: _wire2api_opt_list_opt_box_autoadd_attribute(arr[13]),
    newtypeint: _wire2api_opt_box_autoadd_new_type_int(arr[14]),
    stringList: _wire2api_opt_StringList(arr[15]),
  );
}

double _wire2api_f32(dynamic /*double*/ raw) {
  return raw as double;
}

double _wire2api_f64(dynamic /*double*/ raw) {
  return raw as double;
}

Float32List _wire2api_float_32_list(dynamic raw) {
  return raw as Float32List;
}

Float64List _wire2api_float_64_list(dynamic raw) {
  return raw as Float64List;
}

int _wire2api_i32(dynamic /*int*/ raw) {
  return raw as int;
}

int _wire2api_i64(dynamic /*BigInt*/ raw) {
  return raw as int;
}

int _wire2api_i8(dynamic /*int*/ raw) {
  return raw as int;
}

Int32List _wire2api_int_32_list(dynamic raw) {
  return raw as Int32List;
}

Int64List _wire2api_int_64_list(dynamic raw) {
  return raw as Int64List;
}

Int8List _wire2api_int_8_list(dynamic raw) {
  return raw as Int8List;
}

KitchenSink _wire2api_kitchen_sink(dynamic raw) {
  switch (raw[0]) {
    case 0:
      return Empty();
    case 1:
      return Primitives(
        int32: _wire2api_i32(raw[1]),
        float64: _wire2api_f64(raw[2]),
        boolean: _wire2api_bool(raw[3]),
      );
    case 2:
      return Nested(
        _wire2api_box_kitchen_sink(raw[1]),
      );
    case 3:
      return Optional(
        _wire2api_opt_box_autoadd_i32(raw[1]),
        _wire2api_opt_box_autoadd_i32(raw[2]),
      );
    case 4:
      return Buffer(
        _wire2api_ZeroCopyBuffer_Uint8List(raw[1]),
      );
    case 5:
      return Enums(
        _wire2api_weekdays(raw[1]),
      );
    default:
      throw Exception("unreachable");
  }
}

List<Attribute> _wire2api_list_attribute(dynamic /*List<wire_Attribute>*/ raw) {
  return (raw as List<dynamic>).map(_wire2api_attribute).toList();
}

List<MySize> _wire2api_list_my_size(dynamic /*List<wire_MySize>*/ raw) {
  return (raw as List<dynamic>).map(_wire2api_my_size).toList();
}

List<MyTreeNode> _wire2api_list_my_tree_node(dynamic /*List<wire_MyTreeNode>*/ raw) {
  return (raw as List<dynamic>).map(_wire2api_my_tree_node).toList();
}

List<Attribute?> _wire2api_list_opt_box_autoadd_attribute(dynamic /*List<wire_Attribute?>*/ raw) {
  return (raw as List<dynamic>).map(_wire2api_opt_box_autoadd_attribute).toList();
}

MySize _wire2api_my_size(dynamic raw) {
  final arr = raw as List<dynamic>;
  if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
  return MySize(
    width: _wire2api_i32(arr[0]),
    height: _wire2api_i32(arr[1]),
  );
}

MyTreeNode _wire2api_my_tree_node(dynamic raw) {
  final arr = raw as List<dynamic>;
  if (arr.length != 4) throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
  return MyTreeNode(
    valueI32: _wire2api_i32(arr[0]),
    valueVecU8: _wire2api_uint_8_list(arr[1]),
    valueBoolean: _wire2api_bool(arr[2]),
    children: _wire2api_list_my_tree_node(arr[3]),
  );
}

NewTypeInt _wire2api_new_type_int(dynamic raw) {
  final arr = raw as List<dynamic>;
  if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
  return NewTypeInt(
    field0: _wire2api_i64(arr[0]),
  );
}

String? _wire2api_opt_String(dynamic raw) {
  return raw == null ? null : _wire2api_String(raw);
}

List<String>? _wire2api_opt_StringList(dynamic raw) {
  return raw == null ? null : _wire2api_StringList(raw);
}

Uint8List? _wire2api_opt_ZeroCopyBuffer_Uint8List(dynamic raw) {
  return raw == null ? null : _wire2api_ZeroCopyBuffer_Uint8List(raw);
}

Attribute? _wire2api_opt_box_autoadd_attribute(dynamic raw) {
  return raw == null ? null : _wire2api_box_autoadd_attribute(raw);
}

bool? _wire2api_opt_box_autoadd_bool(dynamic raw) {
  return raw == null ? null : _wire2api_box_autoadd_bool(raw);
}

ExoticOptionals? _wire2api_opt_box_autoadd_exotic_optionals(dynamic raw) {
  return raw == null ? null : _wire2api_box_autoadd_exotic_optionals(raw);
}

double? _wire2api_opt_box_autoadd_f64(dynamic raw) {
  return raw == null ? null : _wire2api_box_autoadd_f64(raw);
}

int? _wire2api_opt_box_autoadd_i32(dynamic raw) {
  return raw == null ? null : _wire2api_box_autoadd_i32(raw);
}

int? _wire2api_opt_box_autoadd_i64(dynamic raw) {
  return raw == null ? null : _wire2api_box_autoadd_i64(raw);
}

NewTypeInt? _wire2api_opt_box_autoadd_new_type_int(dynamic raw) {
  return raw == null ? null : _wire2api_box_autoadd_new_type_int(raw);
}

bool? _wire2api_opt_box_bool(dynamic raw) {
  return raw == null ? null : _wire2api_box_bool(raw);
}

ExoticOptionals? _wire2api_opt_box_exotic_optionals(dynamic raw) {
  return raw == null ? null : _wire2api_box_exotic_optionals(raw);
}

double? _wire2api_opt_box_f64(dynamic raw) {
  return raw == null ? null : _wire2api_box_f64(raw);
}

int? _wire2api_opt_box_i32(dynamic raw) {
  return raw == null ? null : _wire2api_box_i32(raw);
}

int? _wire2api_opt_box_i64(dynamic raw) {
  return raw == null ? null : _wire2api_box_i64(raw);
}

int? _wire2api_opt_box_i8(dynamic raw) {
  return raw == null ? null : _wire2api_box_i8(raw);
}

int? _wire2api_opt_box_u8(dynamic raw) {
  return raw == null ? null : _wire2api_box_u8(raw);
}

Float32List? _wire2api_opt_float_32_list(dynamic raw) {
  return raw == null ? null : _wire2api_float_32_list(raw);
}

Float64List? _wire2api_opt_float_64_list(dynamic raw) {
  return raw == null ? null : _wire2api_float_64_list(raw);
}

Int32List? _wire2api_opt_int_32_list(dynamic raw) {
  return raw == null ? null : _wire2api_int_32_list(raw);
}

Int64List? _wire2api_opt_int_64_list(dynamic raw) {
  return raw == null ? null : _wire2api_int_64_list(raw);
}

Int8List? _wire2api_opt_int_8_list(dynamic raw) {
  return raw == null ? null : _wire2api_int_8_list(raw);
}

List<Attribute>? _wire2api_opt_list_attribute(dynamic raw) {
  return raw == null ? null : _wire2api_list_attribute(raw);
}

List<Attribute?>? _wire2api_opt_list_opt_box_autoadd_attribute(dynamic raw) {
  return raw == null ? null : _wire2api_list_opt_box_autoadd_attribute(raw);
}

Uint64List? _wire2api_opt_uint_64_list(dynamic raw) {
  return raw == null ? null : _wire2api_uint_64_list(raw);
}

Uint8List? _wire2api_opt_uint_8_list(dynamic raw) {
  return raw == null ? null : _wire2api_uint_8_list(raw);
}

int _wire2api_u32(dynamic /*int*/ raw) {
  return raw as int;
}

int _wire2api_u64(dynamic /*BigInt*/ raw) {
  return raw as int;
}

int _wire2api_u8(dynamic /*int*/ raw) {
  return raw as int;
}

Uint64List _wire2api_uint_64_list(dynamic raw) {
  return raw as Uint64List;
}

Uint8List _wire2api_uint_8_list(dynamic raw) {
  return raw as Uint8List;
}

Weekdays _wire2api_weekdays(dynamic raw) {
  return Weekdays.values[raw];
}

String _api2wire_String(String raw) {
  return raw;
}

List<String> _api2wire_StringList(List<String> raw) {
  return raw;
}

Uint8List _api2wire_ZeroCopyBuffer_Uint8List(Uint8List raw) {
  return raw;
}

wire_Attribute _api2wire_attribute(Attribute raw) {
  return wire_Attribute(key: _api2wire_String(raw.key), value: _api2wire_String(raw.value));
}

bool _api2wire_bool(bool raw) {
  return raw;
}

wire_Attribute _api2wire_box_autoadd_attribute(Attribute raw) {
  return _api2wire_attribute(raw);
}

bool _api2wire_box_autoadd_bool(bool raw) {
  return _api2wire_bool(raw);
}

wire_Customized _api2wire_box_autoadd_customized(Customized raw) {
  return _api2wire_customized(raw);
}

wire_ExoticOptionals _api2wire_box_autoadd_exotic_optionals(ExoticOptionals raw) {
  return _api2wire_exotic_optionals(raw);
}

double _api2wire_box_autoadd_f64(double raw) {
  return _api2wire_f64(raw);
}

int _api2wire_box_autoadd_i32(int raw) {
  return _api2wire_i32(raw);
}

BigInt _api2wire_box_autoadd_i64(int raw) {
  return _api2wire_i64(raw);
}

wire_KitchenSink _api2wire_box_autoadd_kitchen_sink(KitchenSink raw) {
  return _api2wire_kitchen_sink(raw);
}

wire_MySize _api2wire_box_autoadd_my_size(MySize raw) {
  return _api2wire_my_size(raw);
}

wire_MyTreeNode _api2wire_box_autoadd_my_tree_node(MyTreeNode raw) {
  return _api2wire_my_tree_node(raw);
}

wire_NewTypeInt _api2wire_box_autoadd_new_type_int(NewTypeInt raw) {
  return _api2wire_new_type_int(raw);
}

bool _api2wire_box_bool(bool raw) {
  return _api2wire_bool(raw);
}

wire_ExoticOptionals _api2wire_box_exotic_optionals(ExoticOptionals raw) {
  return _api2wire_exotic_optionals(raw);
}

double _api2wire_box_f64(double raw) {
  return _api2wire_f64(raw);
}

int _api2wire_box_i32(int raw) {
  return _api2wire_i32(raw);
}

BigInt _api2wire_box_i64(int raw) {
  return _api2wire_i64(raw);
}

int _api2wire_box_i8(int raw) {
  return _api2wire_i8(raw);
}

wire_KitchenSink _api2wire_box_kitchen_sink(KitchenSink raw) {
  return _api2wire_kitchen_sink(raw);
}

wire_MySize _api2wire_box_my_size(MySize raw) {
  return _api2wire_my_size(raw);
}

int _api2wire_box_u8(int raw) {
  return _api2wire_u8(raw);
}

wire_Customized _api2wire_customized(Customized raw) {
  return wire_Customized(
      final_field: _api2wire_String(raw.finalField), non_final_field: _api2wire_opt_String(raw.nonFinalField));
}

wire_ExoticOptionals _api2wire_exotic_optionals(ExoticOptionals raw) {
  return wire_ExoticOptionals(
      int32: _api2wire_opt_box_autoadd_i32(raw.int32),
      int64: _api2wire_opt_box_autoadd_i64(raw.int64),
      float64: _api2wire_opt_box_autoadd_f64(raw.float64),
      boolean: _api2wire_opt_box_autoadd_bool(raw.boolean),
      zerocopy: _api2wire_opt_ZeroCopyBuffer_Uint8List(raw.zerocopy),
      int8list: _api2wire_opt_int_8_list(raw.int8List),
      uint8list: _api2wire_opt_uint_8_list(raw.uint8List),
      int32list: _api2wire_opt_int_32_list(raw.int32List),
      int64list: _api2wire_opt_int_64_list(raw.int64List),
      float32list: _api2wire_opt_float_32_list(raw.float32List),
      float64list: _api2wire_opt_float_64_list(raw.float64List),
      attributes: _api2wire_opt_list_attribute(raw.attributes),
      attributes_nullable: _api2wire_list_opt_box_autoadd_attribute(raw.attributesNullable),
      nullable_attributes: _api2wire_opt_list_opt_box_autoadd_attribute(raw.nullableAttributes),
      newtypeint: _api2wire_opt_box_autoadd_new_type_int(raw.newtypeint),
      string_list: _api2wire_opt_StringList(raw.stringList));
}

double _api2wire_f32(double raw) {
  return raw;
}

double _api2wire_f64(double raw) {
  return raw;
}

Float32List _api2wire_float_32_list(Float32List raw) {
  return raw;
}

Float64List _api2wire_float_64_list(Float64List raw) {
  return raw;
}

int _api2wire_i32(int raw) {
  return raw;
}

BigInt _api2wire_i64(int raw) {
  return raw;
}

int _api2wire_i8(int raw) {
  return raw;
}

Int32List _api2wire_int_32_list(Int32List raw) {
  return raw;
}

List<BigInt> _api2wire_int_64_list(Int64List raw) {
  return raw;
}

Int8List _api2wire_int_8_list(Int8List raw) {
  return raw;
}

wire_KitchenSink _api2wire_kitchen_sink(KitchenSink raw) {
  if (raw is Empty) {
    return wire_KitchenSink(
      tag: 0,
      kind: null,
    );
  }
  if (raw is Primitives) {
    return wire_KitchenSink(
      tag: 1,
      kind: KitchenSink_Primitives(
        int32: _api2wire_i32(raw.int32),
        float64: _api2wire_f64(raw.float64),
        boolean: _api2wire_bool(raw.boolean),
      ),
    );
  }
  if (raw is Nested) {
    return wire_KitchenSink(
      tag: 2,
      kind: KitchenSink_Nested(
        field0: _api2wire_box_kitchen_sink(raw.field0),
      ),
    );
  }
  if (raw is Optional) {
    return wire_KitchenSink(
      tag: 3,
      kind: KitchenSink_Optional(
        field0: _api2wire_opt_box_autoadd_i32(raw.field0),
        field1: _api2wire_opt_box_autoadd_i32(raw.field1),
      ),
    );
  }
  if (raw is Buffer) {
    return wire_KitchenSink(
      tag: 4,
      kind: KitchenSink_Buffer(
        field0: _api2wire_ZeroCopyBuffer_Uint8List(raw.field0),
      ),
    );
  }
  if (raw is Enums) {
    return wire_KitchenSink(
      tag: 5,
      kind: KitchenSink_Enums(
        field0: _api2wire_weekdays(raw.field0),
      ),
    );
  }
  throw Exception('unreachable');
}

List<wire_Attribute> _api2wire_list_attribute(List<Attribute> raw) {
  return raw.map(_api2wire_attribute).toList();
}

List<wire_MySize> _api2wire_list_my_size(List<MySize> raw) {
  return raw.map(_api2wire_my_size).toList();
}

List<wire_MyTreeNode> _api2wire_list_my_tree_node(List<MyTreeNode> raw) {
  return raw.map(_api2wire_my_tree_node).toList();
}

List<wire_Attribute?> _api2wire_list_opt_box_autoadd_attribute(List<Attribute?> raw) {
  return raw.map(_api2wire_opt_box_autoadd_attribute).toList();
}

wire_MySize _api2wire_my_size(MySize raw) {
  return wire_MySize(width: _api2wire_i32(raw.width), height: _api2wire_i32(raw.height));
}

wire_MyTreeNode _api2wire_my_tree_node(MyTreeNode raw) {
  return wire_MyTreeNode(
      value_i32: _api2wire_i32(raw.valueI32),
      value_vec_u8: _api2wire_uint_8_list(raw.valueVecU8),
      value_boolean: _api2wire_bool(raw.valueBoolean),
      children: _api2wire_list_my_tree_node(raw.children));
}

wire_NewTypeInt _api2wire_new_type_int(NewTypeInt raw) {
  return wire_NewTypeInt(field0: _api2wire_i64(raw.field0));
}

String? _api2wire_opt_String(String? raw) {
  return raw == null ? null : _api2wire_String(raw);
}

List<String>? _api2wire_opt_StringList(List<String>? raw) {
  return raw == null ? null : _api2wire_StringList(raw);
}

Uint8List? _api2wire_opt_ZeroCopyBuffer_Uint8List(Uint8List? raw) {
  return raw == null ? null : _api2wire_ZeroCopyBuffer_Uint8List(raw);
}

wire_Attribute? _api2wire_opt_box_autoadd_attribute(Attribute? raw) {
  return raw == null ? null : _api2wire_box_autoadd_attribute(raw);
}

bool? _api2wire_opt_box_autoadd_bool(bool? raw) {
  return raw == null ? null : _api2wire_box_autoadd_bool(raw);
}

wire_ExoticOptionals? _api2wire_opt_box_autoadd_exotic_optionals(ExoticOptionals? raw) {
  return raw == null ? null : _api2wire_box_autoadd_exotic_optionals(raw);
}

double? _api2wire_opt_box_autoadd_f64(double? raw) {
  return raw == null ? null : _api2wire_box_autoadd_f64(raw);
}

int? _api2wire_opt_box_autoadd_i32(int? raw) {
  return raw == null ? null : _api2wire_box_autoadd_i32(raw);
}

BigInt? _api2wire_opt_box_autoadd_i64(int? raw) {
  return raw == null ? null : _api2wire_box_autoadd_i64(raw);
}

wire_NewTypeInt? _api2wire_opt_box_autoadd_new_type_int(NewTypeInt? raw) {
  return raw == null ? null : _api2wire_box_autoadd_new_type_int(raw);
}

bool? _api2wire_opt_box_bool(bool? raw) {
  return raw == null ? null : _api2wire_box_bool(raw);
}

wire_ExoticOptionals? _api2wire_opt_box_exotic_optionals(ExoticOptionals? raw) {
  return raw == null ? null : _api2wire_box_exotic_optionals(raw);
}

double? _api2wire_opt_box_f64(double? raw) {
  return raw == null ? null : _api2wire_box_f64(raw);
}

int? _api2wire_opt_box_i32(int? raw) {
  return raw == null ? null : _api2wire_box_i32(raw);
}

BigInt? _api2wire_opt_box_i64(int? raw) {
  return raw == null ? null : _api2wire_box_i64(raw);
}

int? _api2wire_opt_box_i8(int? raw) {
  return raw == null ? null : _api2wire_box_i8(raw);
}

int? _api2wire_opt_box_u8(int? raw) {
  return raw == null ? null : _api2wire_box_u8(raw);
}

Float32List? _api2wire_opt_float_32_list(Float32List? raw) {
  return raw == null ? null : _api2wire_float_32_list(raw);
}

Float64List? _api2wire_opt_float_64_list(Float64List? raw) {
  return raw == null ? null : _api2wire_float_64_list(raw);
}

Int32List? _api2wire_opt_int_32_list(Int32List? raw) {
  return raw == null ? null : _api2wire_int_32_list(raw);
}

List<BigInt>? _api2wire_opt_int_64_list(Int64List? raw) {
  return raw == null ? null : _api2wire_int_64_list(raw);
}

Int8List? _api2wire_opt_int_8_list(Int8List? raw) {
  return raw == null ? null : _api2wire_int_8_list(raw);
}

List<wire_Attribute>? _api2wire_opt_list_attribute(List<Attribute>? raw) {
  return raw == null ? null : _api2wire_list_attribute(raw);
}

List<wire_Attribute?>? _api2wire_opt_list_opt_box_autoadd_attribute(List<Attribute?>? raw) {
  return raw == null ? null : _api2wire_list_opt_box_autoadd_attribute(raw);
}

List<BigInt>? _api2wire_opt_uint_64_list(Uint64List? raw) {
  return raw == null ? null : _api2wire_uint_64_list(raw);
}

Uint8List? _api2wire_opt_uint_8_list(Uint8List? raw) {
  return raw == null ? null : _api2wire_uint_8_list(raw);
}

int _api2wire_u32(int raw) {
  return raw;
}

BigInt _api2wire_u64(int raw) {
  return raw;
}

int _api2wire_u8(int raw) {
  return raw;
}

List<BigInt> _api2wire_uint_64_list(Uint64List raw) {
  return raw;
}

Uint8List _api2wire_uint_8_list(Uint8List raw) {
  return raw;
}

int _api2wire_weekdays(Weekdays raw) {
  return raw.index;
}
