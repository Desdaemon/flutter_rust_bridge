name: Release

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-upload:
    name: Build and Upload Binaries
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: flutter_rust_bridge_codegen-x86_64-unknown-linux-gnu-${{ github.ref_name }}.tgz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: flutter_rust_bridge_codegen-x86_64-unknown-linux-musl-${{ github.ref_name }}.tgz
          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            name: flutter_rust_bridge_codegen-i686-unknown-linux-musl-${{ github.ref_name }}.tgz
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: flutter_rust_bridge_codegen-aarch64-unknown-linux-musl-${{ github.ref_name }}.tgz
          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            name: flutter_rust_bridge_codegen-arm-unknown-linux-musleabihf-${{ github.ref_name }}.tgz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: flutter_rust_bridge_codegen-x86_64-apple-darwin-${{ github.ref_name }}.tgz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: flutter_rust_bridge_codegen-aarch64-apple-darwin-${{ github.ref_name }}.tgz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: flutter_rust_bridge_codegen-x86_64-pc-windows-msvc-${{ github.ref_name }}.zip
          - target: i686-pc-windows-msvc
            os: windows-latest
            name: flutter_rust_bridge_codegen-i686-pc-windows-msvc-${{ github.ref_name }}.zip
          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
            name: flutter_rust_bridge_codegen-x86_64-unknown-freebsd-${{ github.ref_name }}.tgz
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: |
            --release --target ${{ matrix.target }} --manifest-path frb_codegen/Cargo.toml
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Post-build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd frb_codegen/target/${{ matrix.target }}/release
          7z a ../../../../${{ matrix.name }} flutter_rust_bridge_codegen.exe
          cd -
      - name: Post-build (*nix)
        if: matrix.os != 'windows-latest'
        run: |
          cd frb_codegen/target/${{ matrix.target }}/release
          tar czvf ../../../../${{ matrix.name }} flutter_rust_bridge_codegen
          cd -
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
  build-bottles:
    name: Build Homebrew bottles
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-12
          - macos-11
          - macos-10.15
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Cache Homebrew Bundle RubyGems
        id: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-
      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems
      # - run: brew test-bot --only-formulae
      - name: Upload bottles as artifact
        uses: actions/upload-artifact@v2
        with:
          name: bottles
          path: '*.bottles.*'
  upload-artifacts:
    name: Add Build Artifacts to Release
    needs: build-upload
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Generate hashes
        run: |
          openssl dgst -sha256 -r -out hashes-${{ github.ref_name }}.txt \
            flutter_rust_bridge_codegen-*/flutter_rust_bridge_codegen-*
      - name: Add Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            flutter_rust_bridge_codegen-*/flutter_rust_bridge_codegen-*
            hashes-${{ github.ref_name }}.txt
          tag_name: ${{ github.ref_name }}
  refresh-scoop:
    name: Refresh Scoop manifest
    runs-on: ubuntu-latest
    needs: upload-artifacts
    steps:
      - uses: actions/checkout@v2
      - name: Regenerate Scoop manifest
        run: ./contrib/scoop.sh
      - name: Commit changes
        uses: devops-infra/action-commit-push@v0.9.0
        with:
          github_token: ${{ github.token }}
          commit_message: "Update Scoop manifest to ${{ github.ref_name }}"
  refresh-homebrew:
    name: Refresh Homebrew formula
    runs-on: ubuntu-latest
    needs: build-bottles
    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Set up Git
        uses: Homebrew/actions/git-user-config@master
      - name: Pull bottles
        uses: actions/download-artifact@v2
        with:
          name: bottles
      - name: Apply commits
        run: |
          brew 
      # - uses: mislav/bump-homebrew-formula-action@v2
      #   with:
      #     formula-name: flutter_rust_bridge_codegen
      #     homebrew-tap: Desdaemon/homebrew-repo
      #     tag-name: ${{ github.ref_name }}
      #   env:
      #     COMMITTER_TOKEN: ${{ secrets.GH_PAT }}
